# -*- coding: utf-8 -*-
"""ethnicityprediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kDG4mrms8Kgm7KjTgEe4wjINv1e4nShs
"""

from zipfile import ZipFile
file = "/content/drive/My Drive/Colab Notebooks/utkface-new (1).zip"
with ZipFile(file,'r') as zip:
  zip.extractall()
  print('done')

import os
from imageio import imread
import cv2
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from keras.models import Sequential
from keras.layers import Conv2D, MaxPooling2D
from keras.layers import Flatten, Dense
from keras.optimizers import *
from keras.utils.np_utils import to_categorical
from keras.losses import categorical_crossentropy
from keras.losses import *

os.chdir("UTKFace")



file = os.listdir()

label = [i.split("_")[-2] for i in file]

print(label)

classes = []

for i in  label:
    i = int(i)
    classes.append(i)

print(classes)


X_data =[]
for file in file:
    face = imread(file)
    face = cv2.resize(face, (32, 32))
    X_data.append(face)
x1=np.array(X_data)
print(x1.shape)
x = np.squeeze(X_data)
x = x.astype('float32')
x /= 255

print(x.shape)


categorical_labels = classes


(x_train, y_train), (x_test, y_test) = (x[:15008],categorical_labels[:15008]) , (x[15008:] , categorical_labels[15008:])
(x_valid , y_valid) = (x_test[:7000], y_test[:7000])
(x_test, y_test) = (x_test[7000:], y_test[7000:])

model2 =Sequential()
model2.add(Conv2D(6,(4,4),  activation='relu', input_shape=(32,32,3)))
model2.add(MaxPooling2D(pool_size=2))
model2.add(Conv2D(64,(3,3), activation='relu'))
model2.add(MaxPooling2D(pool_size=2))
model2.add(Flatten())
model2.add(Dense(5, activation='softmax'))


model2.summary()
model2.compile(loss='sparse_categorical_crossentropy',optimizer=rmsprop(learning_rate=0.001),metrics=['accuracy'])
history2= model2.fit(x_train,y_train,validation_data=(x_valid,y_valid),epochs=20,batch_size=100)

from google.colab import files
plt.plot(history2.history['accuracy'])
plt.plot(history2.history['val_accuracy'])
plt.title(' ethnicity accuracy')
plt.ylabel('accuracy')
plt.xlabel('epoch')
plt.legend(['train', 'val'], loc='upper left')
plt.savefig("etnicity80+.png")
files.download("etnicity80+.png")
plt.show()

score = model2.evaluate(x_test, y_test, verbose=0)
print(score)

from google.colab import files
from numpy import random
predictions = model2.predict_classes(x_test)

random_indices = [random.randint(0, 1000) for i in range(9)]


plt.figure(figsize=(10,10))
for i, index in enumerate(random_indices):
    pred = predictions[index]
    if pred == 0:
      pred = "white"
    if pred==1:
      pred= "black"
    if pred==2:
      pred="asian"
    if pred==3:
      pred="indian" 
    if pred==4:
       pred = "others" 

    k=plt.subplot(3,3,i+1)
    k.imshow(np.squeeze(x_test[index]))
    plt.title(f"Predicted: {pred}")
    plt.tight_layout()
plt.savefig("etnicitypic.png")
files.download("etnicitypic.png")
plt.show()